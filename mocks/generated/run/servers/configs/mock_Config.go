// Code generated by mockery v2.40.1. DO NOT EDIT.

package configs

import (
	parameters "github.com/bukka/wst/run/parameters"
	mock "github.com/stretchr/testify/mock"
)

// MockConfig is an autogenerated mock type for the Config type
type MockConfig struct {
	mock.Mock
}

type MockConfig_Expecter struct {
	mock *mock.Mock
}

func (_m *MockConfig) EXPECT() *MockConfig_Expecter {
	return &MockConfig_Expecter{mock: &_m.Mock}
}

// FilePath provides a mock function with given fields:
func (_m *MockConfig) FilePath() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for FilePath")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockConfig_FilePath_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'FilePath'
type MockConfig_FilePath_Call struct {
	*mock.Call
}

// FilePath is a helper method to define mock.On call
func (_e *MockConfig_Expecter) FilePath() *MockConfig_FilePath_Call {
	return &MockConfig_FilePath_Call{Call: _e.mock.On("FilePath")}
}

func (_c *MockConfig_FilePath_Call) Run(run func()) *MockConfig_FilePath_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockConfig_FilePath_Call) Return(_a0 string) *MockConfig_FilePath_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockConfig_FilePath_Call) RunAndReturn(run func() string) *MockConfig_FilePath_Call {
	_c.Call.Return(run)
	return _c
}

// Parameters provides a mock function with given fields:
func (_m *MockConfig) Parameters() parameters.Parameters {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Parameters")
	}

	var r0 parameters.Parameters
	if rf, ok := ret.Get(0).(func() parameters.Parameters); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(parameters.Parameters)
		}
	}

	return r0
}

// MockConfig_Parameters_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Parameters'
type MockConfig_Parameters_Call struct {
	*mock.Call
}

// Parameters is a helper method to define mock.On call
func (_e *MockConfig_Expecter) Parameters() *MockConfig_Parameters_Call {
	return &MockConfig_Parameters_Call{Call: _e.mock.On("Parameters")}
}

func (_c *MockConfig_Parameters_Call) Run(run func()) *MockConfig_Parameters_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockConfig_Parameters_Call) Return(_a0 parameters.Parameters) *MockConfig_Parameters_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockConfig_Parameters_Call) RunAndReturn(run func() parameters.Parameters) *MockConfig_Parameters_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockConfig creates a new instance of MockConfig. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockConfig(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockConfig {
	mock := &MockConfig{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
